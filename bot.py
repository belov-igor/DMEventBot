# -*- coding: utf-8 -*-
import asyncio
import logging

from aiogram import Bot, Dispatcher, types

from config_reader import config


async def main():
    # –ó–∞–ø—É—Å–∫ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    logging.basicConfig(
        level=logging.INFO,
        format="%(asctime)s - %(levelname)s - %(name)s - %(message)s"
    )

    # –û–±—ä–µ–∫—Ç –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
    bot = Bot(token=config.bot_token.get_secret_value(), parse_mode="HTML")
    dp = Dispatcher(bot=bot)

    # –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start –∏ /information
    @dp.message_handler(commands=['start', 'information'])
    async def cmd_start_and_information(message: types.Message):
        info_message = "<b>–î–æ–±—Ä–æ –¥–æ—à–ª–∏!</b>\n\n" \
                       "–ú—ã ‚Äî <b>VPN Event</b>, –Ω–µ–±–æ–ª—å—à–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤, –∫–≤–∞—Ä—Ç–∏—Ä–Ω–∏–∫–æ–≤ –∏ —Å—Ç–µ–Ω–¥–∞–ø–æ–≤ " \
                       "–≤ –ù–æ–≤–∏ –°–∞–¥–µ (–∞ –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –∏ –ø–æ –≤—Å–µ–π –°–µ—Ä–±–∏–∏ –∏–ª–∏ –¥–∞–∂–µ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É!).\n" \
                       "–ü–æ–∫–∞ –º—ã –¥–µ–ª–∞–µ–º –Ω–µ–º–Ω–æ–≥–æ, –Ω–æ –ø–ª–∞–Ω–∏—Ä—É–µ–º —Ä–∞—Å—à–∏—Ä—è—Ç—å—Å—è.\n\n" \
                       "–ï—Å–ª–∏ –≤–¥—Ä—É–≥ —É –í–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ —Å—Ä–∞–±–æ—Ç–∞–ª–æ, –∞ –º–æ–∂–µ—Ç –í—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å " \
                       "–ø—Ä–æ–≤–µ—Å—Ç–∏ –∫–∞–∫–æ–µ-–Ω–∏–±—É–¥—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ, —Ç–æ –ø–∏—à–∏—Ç–µ –≤ –õ–° –æ–¥–Ω–æ–º—É –∏–∑ —ç—Ç–∏—Ö –¥–≤—É—Ö –ª—é–¥–µ–π ‚Äî " \
                       "<b>@BISGARIK</b> –∏–ª–∏ <b>@RADIATORBLACK</b>"
        await message.answer(info_message)

        links_buttons = types.InlineKeyboardMarkup()
        links_buttons.row(types.InlineKeyboardButton(
            text="–ù–∞—à Instagram", url="https://instagram.com/vpnevent?igshid=MzRlODBiNWFlZA=="))
        await message.answer("–ò –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –Ω–∞—à–∏ —Å–æ—Ü—Å–µ—Ç–∏!",
                             reply_markup=links_buttons)

    # –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /events
    @dp.message_handler(commands=["events"])
    async def cmd_events(message: types.Message):
        await message.answer("–ú—ã –æ—á–µ–Ω—å –∏–∑–≤–∏–Ω—è–µ–º—Å—è, –Ω–æ –±–æ—Ç –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ üòû\n\n"
                             "–í –±—É–¥—É—â–µ–º, –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É, –±—É–¥–µ—Ç –ø–æ—è–≤–ª—è—Ç—å—Å—è —Å–ø–∏—Å–æ–∫ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π.\n\n"
                             "–ê –ø–æ–∫–∞ –ø—Ä–æ—Å–∏–º –í–∞—Å –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ —Ç–µ–∫—Å—Ç–æ–º, –Ω–∞ –∫–∞–∫–æ–µ –∏–∑ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π "
                             "–í—ã –±—ã —Ö–æ—Ç–µ–ª–∏ –ø–æ–ø–∞—Å—Ç—å, –Ω–∞ —á—å—ë –∏–º—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å, –∏ —Å–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç —á–µ–ª–æ–≤–µ–∫.\n\n"
                             "–°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–π–¥—ë—Ç –∫—É–¥–∞ –Ω–∞–¥–æ, –∏ –í–∞–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–≤–µ—Ç—è—Ç!")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    @dp.message_handler(lambda message: message.reply_to_message and message.reply_to_message.forward_from,
                        content_types=types.ContentTypes.ANY)
    async def handle_admin_response(message: types.Message):
        user_id = message.reply_to_message.forward_from.id

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –∏ –ø–µ—Ä–µ—Å—ã–ª–∫–∞ –µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        if message.content_type == 'text':
            await bot.send_message(user_id, message.text)
        elif message.content_type == 'photo':
            await bot.send_photo(user_id, photo=message.photo[0].file_id, caption=message.caption)
        elif message.content_type == 'video':
            await bot.send_video(user_id, video=message.video.file_id, caption=message.caption)
        elif message.content_type == 'audio':
            await bot.send_audio(user_id, audio=message.audio.file_id, caption=message.caption)
        elif message.content_type == 'voice':
            await bot.send_voice(user_id, voice=message.voice.file_id, caption=message.caption)
        elif message.content_type == 'video_note':
            await bot.send_video_note(user_id, video_note=message.video_note.file_id)
        else:
            await message.answer('–ö–æ–ª—è, –±—Ä–∞—Ç, –Ω—É —Ç–æ–ª—å–∫–æ —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –≥–æ–ª–æ—Å–æ–≤—É—Ö–∏ –∏ –∫—Ä—É–∂–æ—á–∫–∏. –≠—Ç–æ —É–∂–µ –ø–µ—Ä–µ–±–æ—Ä')

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    @dp.message_handler(content_types=types.ContentTypes.TEXT)
    async def answer(message: types.Message):

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç
        await bot.send_message(config.group_id.get_secret_value(),
                               f'üîΩ –ù–∏–∫ —á–µ–ª–æ–≤–µ–∫–∞ –≤–Ω–∏–∑—É: <b>@{message.chat.username}</b> üîΩ')
        await bot.forward_message(config.group_id.get_secret_value(),
                                  message.chat.id, message.message_id)

    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –≤—Å–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ –≤—Ö–æ–¥—è—â–∏–µ –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–ª–ª–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –∞–ø–¥–µ–π—Ç–æ–≤
    await bot.delete_webhook(drop_pending_updates=True)
    try:
        await dp.start_polling(bot)
    finally:
        await bot.session.close()


if __name__ == "__main__":
    asyncio.run(main())
